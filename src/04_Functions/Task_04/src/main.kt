/* Написать программу, реализующую шифровку и расшифровку сообщения методом омофонической замены.
 * На входе программа запрашивает исходное сообщение.
 * В результате работы программа выводит на консоль исходное сообщение,
 * зашифрованное сообщение, состоящее из цифр разбитых в группы по три цифры и пробела между группами,
 * и шифровальную таблицу.
 * Шифровальную таблицу допускается выводить на консоль в виде строк,
 * где каждая строка состоит из символа алфавита и соответствующего набора чисел разделенных пробелами.
 * Каждое число состоит из трех знаков.
 * Если число меньше 100, то оно дописывается до трех знаков путем добавления нулей перед числом.
 *
 * Шифровальная таблица составляется путем сопоставления букве алфавита
 * набора случайных неповторяющихся чисел от 0 до 999.
 * Количество случайных чисел для каждой буквы алфавита равно коэффициенту вероятности умноженному на 1000.
 * Числа также не повторяются для всей таблицы.
 * Можно использовать типовую таблицу - то есть для символа 'А' используются строки от "000" до "068",
 * так как вероятность появления символа 'А' равна 0.069.
 * Для символа 'Б' используются строки от "069" до "081" и т.д.
 * Для символа 'Я' используются строки от "837" до "853".
 * Для символа ПРОБЕЛ используются строки от "854" до "999".
 *
 * Каждая буква шифруется набором из трех цифр.
 * Если букве сопоставляется число, состоящее менее, чем из трех знаков, то перед числом дописываются нули.
 * Если одна и та же буква повторяется в исходном сообщении несколько раз,
 * то для ее замены используются разные и не повторяющиеся числа из соответствующего набора.
 * В случае, если количество повторений буквы больше, чем чисел в наборе,
 * то возможно повторное использование чисел из соответствующего набора,
 * но до тех пор, пока набор не исчерпает себя и т.д.
 *
 * Для дешифровки можно использовать типовую таблицу в которой строки из чисел расположены по порядку.
 * Естественно, что шифруем тогда тоже с использованием типовой таблицы.
 */

fun main() {
    try {
        // Input
        print("Enter a text to encrypt: ")
        val original = readln()
        val message = Crypto.Text(original)
        print("Enter the encoding table type you want to use (0 - Standard, 1 - Randomized): ")
        val tableInput = readln()

        // Create an instance
        val cipher = when {
            tableInput == "0" && message.isRuLet    -> Homophonic(Crypto.Chars.FqMap.RuSt, false)
            tableInput == "1" && message.isRuLet    -> Homophonic(Crypto.Chars.FqMap.RuSt, true)
            else                                    -> Homophonic(original)
        }
        // Cipher
        val encrypt = cipher.encrypt(original)
        val decrypt = cipher.decrypt(encrypt)
        // Output
        println()
        cipher.printResult(original, encrypt, decrypt)
        println()
        cipher.printCipherTable()
    }
    catch (exc: Exception) {
        println(Console.format("Invalid input: ", mode = Console.Mode.Error) + exc.message)
    }
}

/* Sample I/O
=== Input 1 ===
Enter a text to encrypt: АБРАМОВ
Enter the encoding table type you want to use (0 - Standard, 1 - Randomized): 0
=== Output 1 ===
Plaintext	А	Б	Р	А	М	О	В
Ciphertext	013	076	603	047	402	536	092
Decrypted	А	Б	Р	А	М	О	В

 	940	896	881	865	875	891	962	941	960	919	978	892	936	981	890	983	915	989	973	898	965	922	876	986	987	931	993	868	999	937	866	995	996	991	924	906	970	956	894	964	977	903	880	980	927	882	910	984	912	942	921	925	935	888	974	878	952	867	988	893	917	982	946	975	990	968	918	969	971	938	944	923	877	889	957	926	976	930	979	907	869	994	934	885	884	900	883	955	953	992	959	899	902	951	966	904	911	872	949	879	939	958	954	905	985	886	967	933	870	913	963	998	873	895	932	947	961	997	864	945	950	928	871	948	908	887	914	909	943	897	929	972	874	901	916	920
а	013	047	042	003	012	025	040	007	019	014	056	061	064	031	045	008	059	052	060	017	058	006	051	022	055	041	048	037	033	005	062	000	057	026	011	010	001	023	066	009	049	063	054	004	043	015	034	032	002	035	027	021	030	028	068	038	065	050	016	067	053	044	024	020	046	036	039	029
б	076	078	073	077	074	081	069	075	070	079	071	072	080
в	092	084	119	116	094	083	114	101	089	107	111	090	093	100	108	118	103	095	106	112	082	104	110	088	102	113	096	098	117	105	109	085	097	099	091	115	087	086
г	128	124	127	123	120	132	131	130	122	121	129	126	133	125
д	138	154	145	152	144	137	141	136	147	149	156	155	150	135	134	140	139	151	143	148	157	153	146	142
е	213	167	187	222	205	191	208	188	158	174	163	192	182	207	184	195	218	179	162	202	178	197	159	217	190	206	164	228	199	204	215	177	200	214	169	186	224	209	166	212	160	172	226	171	227	216	201	203	183	220	193	170	198	181	161	221	185	168	173	225	219	196	210	211	165	189	176	175	194	180	223
ж	234	233	231	235	232	229	230
з	240	241	246	243	245	251	249	247	238	248	250	236	242	239	244	237
и	304	259	268	306	290	270	253	267	280	298	262	278	309	285	314	271	311	276	257	303	252	297	289	284	283	293	299	255	275	266	300	256	291	258	282	265	288	274	277	286	305	264	312	254	307	301	281	310	261	313	287	273	302	292	269	315	295	308	279	260	263	296	272	294
й	323	325	322	316	319	324	318	321	317	320
к	343	342	340	339	354	353	352	347	349	336	346	337	351	330	348	350	335	327	329	328	338	341	344	334	345	326	333	331	332
л	357	383	382	390	378	381	365	375	369	361	355	379	392	386	362	389	388	391	385	374	373	370	358	367	356	371	377	372	393	368	376	384	366	363	360	359	380	364	387
м	402	409	417	403	419	400	418	397	395	416	413	414	399	394	407	404	405	412	408	411	410	398	415	406	396	420	401
н	467	461	475	466	452	421	469	462	438	436	424	446	444	472	427	468	449	434	450	465	435	456	457	428	432	454	473	447	425	471	474	430	448	451	464	445	476	459	422	460	443	441	440	458	433	455	470	477	431	437	463	453	429	439	426	423	442
о	536	532	548	567	561	515	496	500	564	540	489	529	522	535	546	527	493	533	478	494	486	563	502	544	538	566	516	509	513	520	491	552	542	526	569	498	557	506	501	556	510	537	511	497	524	514	481	528	545	505	487	530	483	534	523	525	485	482	555	558	490	479	551	517	480	484	499	541	549	503	568	539	507	543	565	562	554	570	571	519	512	488	495	553	508	521	560	547	504	492	531	550	559	518
п	572	584	582	592	579	593	586	596	575	588	576	573	581	585	591	583	594	587	589	577	574	578	595	597	580	590
р	603	623	613	616	620	638	602	625	633	607	626	618	628	615	601	635	622	606	631	621	634	605	636	639	610	604	598	612	608	627	611	599	629	617	600	632	609	624	619	637	630	614
с	658	657	649	655	653	659	642	652	673	663	646	681	671	666	679	640	665	683	682	675	677	644	672	647	645	685	684	669	680	678	668	660	670	674	650	651	664	654	656	662	661	648	641	676	667	643
т	734	691	726	735	723	714	708	738	711	689	730	709	728	727	697	729	739	693	717	720	715	732	737	705	698	716	719	694	686	701	703	695	696	721	710	736	700	731	713	702	706	699	725	724	692	704	707	733	712	722	687	688	718	690
у	749	745	751	744	754	757	760	741	762	759	747	753	740	756	755	758	743	750	761	746	752	742	748
ф	765	764	763
х	772	773	769	766	768	771	767	770
ц	777	781	787	774	780	778	783	782	785	786	784	779	788	776	775
ч	796	794	792	789	798	791	799	790	793	795	797	800
ш	804	805	801	802	803	806
щ	807	808	810	809
ъ	811
ы	850	849	855	853	857	851	860	862	859	852	858	856	854	863	861
ь	822	816	815	818	819	813	820	823	812	814	824	817	821
э	826	825
ю	828	827	831	830	829
я	848	847	846	833	836	839	840	835	844	845	834	841	843	842	837	838	832

=== Input 2 ===
Enter a text to encrypt: ВЕРА
Enter the encoding table type you want to use (0 - Standard, 1 - Randomized): 1
=== Output 2 ===
Plaintext	В	Е	Р	А
Ciphertext	285	031	956	961
Decrypted	В	Е	Р	А

 	735	222	720	226	534	384	312	262	190	077	947	168	723	550	751	614	106	588	640	593	294	969	856	473	835	924	837	561	794	093	692	905	976	183	975	980	204	902	148	925	532	810	868	408	629	058	419	042	625	179	415	704	451	991	611	085	609	847	322	850	416	321	319	243	828	543	718	977	522	553	459	738	237	477	914	714	566	164	539	759	133	051	352	487	159	766	942	803	324	685	045	581	541	090	510	603	542	335	537	630	370	440	065	771	983	576	895	221	513	235	729	365	084	291	922	474	974	176	144	208	979	203	364	791	661	480	036	538	011	289	935	160	768	413	026	209
а	961	145	523	606	858	001	756	536	194	817	353	664	094	717	151	242	478	389	323	498	890	822	602	375	557	326	641	721	571	649	189	424	585	169	453	141	076	178	111	279	297	706	024	379	239	883	358	737	520	023	597	916	567	367	071	973	688	273	167	301	574	004	340	173	745	607	433	315
б	233	249	014	199	970	311	881	126	592	056	906	933	103
в	285	564	836	096	287	785	402	651	884	657	373	377	521	254	256	247	231	063	260	787	684	687	008	901	879	383	769	496	174	223	590	796	784	153	517	556	563	462
г	821	799	290	678	860	572	919	728	457	813	673	929	834	562
д	354	355	946	870	693	423	797	505	997	005	050	633	481	689	996	069	528	965	102	627	033	501	842	815
е	031	774	284	066	441	346	436	530	252	086	017	760	061	299	809	420	054	934	831	652	331	469	535	798	709	265	316	137	660	444	120	770	612	659	317	670	697	708	509	540	296	958	458	719	839	880	435	214	994	711	200	241	074	555	240	820	767	891	320	623	742	213	962	150	894	862	861	863	202	781	313
ж	309	091	700	888	403	827	915
з	545	744	927	282	570	859	526	218	899	368	832	378	307	266	726	445
и	848	818	910	083	386	022	500	761	280	122	347	157	874	690	772	471	878	300	039	949	124	638	819	855	210	278	844	865	019	886	432	398	060	873	811	549	328	110	999	302	920	027	548	062	637	215	116	748	936	131	833	716	314	234	615	349	115	599	877	409	605	059	529	397
й	139	185	012	786	736	954	359	263	385	667
к	546	304	783	857	631	681	491	230	274	136	918	896	565	422	281	101	015	087	802	937	010	350	295	939	740	342	362	808	893
л	495	410	388	196	380	951	932	854	694	332	912	082	129	732	180	246	232	598	275	426	945	683	843	070	392	048	162	092	573	950	898	089	032	503	897	283	105	430	722
м	428	773	464	527	318	171	382	733	823	986	845	140	944	789	248	648	109	533	443	489	043	608	020	931	172	407	762
н	713	454	531	807	560	013	399	394	447	308	467	734	816	132	782	788	138	488	360	511	007	081	595	047	619	376	515	712	591	984	135	108	029	097	156	339	072	298	754	107	206	655	341	938	930	801	175	021	000	201	941	763	518	852	957	952	971
о	411	610	161	524	229	795	117	211	838	569	460	686	404	777	672	647	626	584	948	449	725	516	594	371	680	972	220	955	940	396	992	699	018	730	696	497	578	053	663	192	707	009	829	197	366	634	127	310	158	327	073	395	041	559	551	217	507	851	727	492	052	351	128	228	800	675	181	336	885	644	264	966	303	872	405	479	390	452	028	959	750	348	903	867	476	904	080	356	849	455	749	552	658	146
п	643	544	869	739	864	387	780	494	587	472	616	618	589	025	333	656	779	037	064	514	825	968	155	177	216	244
р	956	154	147	580	907	928	255	998	826	995	079	461	438	620	921	236	143	600	272	953	871	245	840	642	412	227	982	702	724	450	193	251	665	755	743	677	212	917	679	776	701	187
с	130	165	666	764	369	882	586	635	292	363	276	926	978	238	671	466	431	582	705	198	741	911	078	493	195	806	575	288	525	853	113	943	170	876	114	286	512	601	485	613	330	646	624	337	098	414
т	035	329	824	361	268	547	486	499	267	964	030	967	792	805	182	981	703	259	913	757	715	372	866	104	892	923	325	778	016	134	067	508	989	293	456	812	662	990	993	674	468	650	470	846	381	682	123	099	219	357	987	691	224	344
у	184	909	417	049	960	695	225	439	753	502	900	568	100	617	804	003	119	038	758	258	044	250	676
ф	988	475	057
х	118	112	653	519	596	793	698	554
ц	006	583	277	068	746	418	830	985	188	393	305	374	448	775	075
ч	579	752	889	483	191	002	841	166	506	345	400	622
ш	338	269	401	465	253	639
щ	875	207	482	205
ъ	391
ы	669	654	1000	632	765	334	963	271	163	421	142	790	427	343	152
ь	484	437	040	442	095	055	257	504	434	908	668	710	306
э	125	270
ю	636	814	628	149	406
я	747	046	446	429	186	887	463	577	121	645	490	604	558	261	621	731	088

=== Input 3 ===
Enter a text to encrypt:
Enter the encoding table type you want to use (0 - Standard, 1 - Randomized):
=== Output 3 ===
Plaintext
Ciphertext
Decrypted

 	1628	6007	3244	4483	7081	8967	4218	1151	6289	8504	1488	9872	4210	5509	7131	8156	3725	4414	5403	3096	9937	3873	6652	1616	3854	7329	6761	1415	4981	1167	7849	4389	9839	4952	1436	5974	0271	9330	8902	3746	6343	9903	7385	8153	2800	4681	6410	5580	4969	2687	4955	6508	2693	3258	0227	5005	3084	8746	3974	8230	5555	0629	2357	6499	7004	3835	6153	2625	1482	2356	6911	9620	8530	2295	2962	1448	6301	4979	3760	6548	4173	5989	5192	4900	4748	2293	8139	5520	4953	6285	2697	4642	8314	3560	4855	1102	6992	1832	2230	0415	7370	7441	7723	5561	4915	3795	4286	3884	3918	2932	2078	3192	7401	0803	5068	10000	6026	8079	0069	8192	0351	0045	7830	0782	9295	6642	1465	1013	3846	4030	9875	5348	0625	1960	7170	1266	1507	9678	4922	6080	7815	2616	5792	9450	9047	8519	9477	7089	0342	7677	4712	6689	0230	5762	0569	3952	1838	5088	5490	3833	3948	1980	3265	2627	6822	4627	5221	8420	8790	5258	5408	8467	6189	8187	7535	7674	4442	8933	7582	4906	0347	1623	5219	7630	5372	9014	4329	5410	4061	2449	9734	7938	3435	6211	9933	3459	5011	6596	4595	4883
а	9675	0001	2623	9426	5450	6800	7485	4581	8142	0950	3012	2520	2035	4339	0140	4378	5892	3516	7209	1469	0818	1285	7780	2314	9430	5966	0261	5268	2122	1089	3962	3535	6665	5149	7217	6352	9512	7914	6324	2647	9366	2665	9525	3238	9020	8231	6733	9034	8918	7344	2849	0452	7294	0238	3653	6184	4818	7686	8018	0054	2015	7568
б	2371	9097	7917	2123	0636	0355	0770	7455	5635	4201	5147
в	5596	1529	9127	4120	5185	5893	2456	6988	5222	8584	7594	3510	0980	2120	8248	0931	6503	2790	7376	3621	7762	6608	6886	3617	5617	7240	5860	6540	6465	9811	1306	6443	8535	4776	4808
г	0196	5488	6136	2398	7795	7107	6653	5912
д	6468	3901	5052	2744	2404	0288	5648	2138	0476	0921	7106	9808	0617	5083	7350	7936	4603	0679	8375	9630	9597	1626	7139	1268	5672	1101
е	4775	0451	7742	0150	1769	8124	2243	6302	3762	8377	6240	8975	5652	8728	0911	1988	7558	0459	3052	5777	2173	5527	4092	9955	6330	3508	9162	6578	1263	8201	9453	3723	7095	9285	5193	0042	2184	8813	9584	3675	1717	6739	4571	3889	5809	0653	8958	2437	1192	0207	1402	7789	0126	6949	1123	9928	3365	7040	1314	5105	1916	0445	5977	5344	3639	9532	0772	5914	8190	7488	8602	6296	8191
ж	8494	9547	4707	0100	6672	9816	7721
з	7183	1864	5075	3872	0125	0111	0328	1094	5815	3127	3953	7859	2327
и	7505	2770	1429	6932	6278	6957	6787	6238	9869	3678	2702	8415	9433	4565	2473	0449	5664	8894	5009	4371	1856	4674	4384	2537	0034	2468	9616	9910	4273	9445	0130	1338	3763	8700	0441	8575	7325	6510	5965	4089	9593	4264	4116	7816	0692	2198	8989	4566	0410	1504	1198	0982	4862	6848	0112	4559	2936
й	5537	5886	2674	0947	4350	9194	9232	9843	8474	0652	4096	5558
к	7839	4691	8809	9411	0750	1523	9131	7182	1085	4728	8601	3587	6676	0214	3171	2826	2313	4693	1585	7969	3394	5956	0779	4783	6172	2851	8957	0010	7119	7472
л	1242	7108	9024	9528	1209	9066	9534	7533	6035	7215	2100	4760	1497	1756	2076	7389	0841	7363	4125	4698	4425	0167	7916	8133	6272	8515	7687	0050	7961
м	0023	0951	5854	3713	2407	6565	2444	5918	6570	1150	4782	2804	7287	1204	9686	5415	6041	1505	9580	0746	0394	7028	9887	8470	9949	1886	6428
н	5590	8495	9182	7128	2635	2809	7356	7349	3400	2555	4490	4829	9576	6329	3388	9400	1506	8511	6784	0233	1336	7068	3164	3643	8208	7825	9518	9774	0332	4715	2084	6977	6337	9690	8703	5867	0250	6895	0892	0565	1962	5132	7110	2438	0443	8395	8182	7958	2505
о	5043	7957	4592	5184	5570	2694	3487	9906	8236	9044	8330	4774	2153	5189	7014	2622	4999	1781	5876	1763	6809	9336	9144	9357	9410	0260	6798	3806	1556	3134	6726	3299	8651	5226	9081	8346	3092	6326	9329	5362	2135	3061	9448	5973	7502	0619	0363	5878	0854	6585	0943	8945	6186	6331	6450	2446	5743	3705	7007	1032	8367	2777	6315	9806	5958	2262	3432	5899	3947	3963	4949	1631	8797	6191	1269
п	2997	0187	1363	5609	8484	1057	1137	6611	6232	3187	8209	6464	4662	7233	1159	3220	0436	4747	9494	2784	6166	2002	0287	2462	6325	1156	8922	6590	7061	8336	1161	0306	0710
р	4112	3827	5894	2096	3270	9908	2975	3051	9237	2952	5342	7873	9103	8931	7022	3544	1335	0422	8729	3685	1027	8289	8225	1494	1221	7409	9220	6598	6714	6421	3449	8211	0381	7953	4821	2186	0628	9200	5737	4459	7987	8543	9941	4272	4962
с	2842	5202	2129	2429	9491	6004	0315	9693	0598	2855	6558	1475	2563	5361	2298	8338	7317	0493	7246	0280	8821	7353	6060	8385	0852	6925	6281	5880	7302	9073	4954	3286	2044	1592	1420	1662	8598	7171	9316	5922
т	1272	6573	2113	7492	7163	5942	2248	9069	2696	2967	9574	1408	3136	3045	3351	4628	1406	6143	1501	9659	8434	4123	1265	0686	1953	3058	4917	7122	4609	3593	8327	4411	3671	9484	1545	7549	2233	2284	8580	3095	3203	1080	2142	3944	6370	6448	6009	1148	1105	5107	2433	8302	2481	9474
у	7306	2024	2839	6692	0040	7608	5763	9228	9455	9943	2676	0458	3706	0137	0586	9569	6754	8369	0027	9856	1069	3336
ф	8818	3769	3377
х	6638	4986	0986	6249
ц	2715	8023
ч	9643	2603	1784	6820	2551	2294	3179	9944	8756
ш	5732	2101
щ	7517	4686	5353	0932
ъ	7358
ы	1303	6514	6248	8645	3916	7822	5680	5167	6078	5371	4447	2960	1543	8219
ь	9822	3549	6747	0638	0330	3008	7698	4644	2714	1461	4392	5844	3271
э	6364	8828
ю	8597	6926	1656	5924	8773	1166	7764	5290
я	3909	9758	7011	8276	6981	9049	3742	6051	6010	5200	5059	2340	9566	7583	9036
 */
